-- Test pause and resume.
CREATE SCHEMA s1;
SET search_path TO s1;
CREATE TABLE a(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE b(i int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
-- expect insert succeed
INSERT INTO a SELECT generate_series(1,100000);
SELECT diskquota.set_schema_quota('s1', '1 MB');
 set_schema_quota 
------------------
 
(1 row)

SELECT diskquota.wait_for_worker_new_epoch();
 wait_for_worker_new_epoch 
---------------------------
 t
(1 row)

-- expect insert fail
INSERT INTO a SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
-- expect insert fail
INSERT INTO b SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
-- pause extension
SELECT diskquota.pause();
 pause 
-------
 
(1 row)

-- expect insert succeed
INSERT INTO a SELECT generate_series(1,100);
-- expect insert succeed
INSERT INTO b SELECT generate_series(1,100);
-- resume extension
SELECT diskquota.resume();
 resume 
--------
 
(1 row)

-- expect insert fail
INSERT INTO a SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
-- expect insert fail
INSERT INTO b SELECT generate_series(1,100);
ERROR:  schema's disk space quota exceeded with name:s1
RESET search_path;
DROP TABLE s1.a, s1.b;
DROP SCHEMA s1;
