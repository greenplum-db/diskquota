CREATE EXTENSION diskquota;
-- start_ignore
\! gpstop -u
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Starting gpstop with args: -u
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Gathering information and validating the environment...
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Obtaining Greenplum Master catalog information
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Obtaining Segment details from master...
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Greenplum Version: 'postgres (Greenplum Database) 6.0.0-alpha.0+dev.16105.gdfbfc2b build dev'
20190319:07:07:05:020219 gpstop:df38f510da4b:gpadmin-[INFO]:-Signalling all postmaster processes to reload
SELECT diskquota.init_table_size_table();
 init_table_size_table 
-----------------------
 
(1 row)

-- end_ignore
SELECT pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

\! cp data/csmall.txt /tmp/csmall.txt
SELECT pg_sleep(15);
 pg_sleep 
----------
 
(1 row)

-- prepare a schema that has reached quota limit
CREATE SCHEMA badquota;
DROP ROLE IF EXISTS testbody;
NOTICE:  role "testbody" does not exist, skipping
CREATE ROLE testbody;
NOTICE:  resource queue required -- using default resource queue "pg_default"
CREATE TABLE badquota.t1(i INT);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE badquota.t1 OWNER TO testbody;
INSERT INTO badquota.t1 SELECT generate_series(0, 100000);
SELECT diskquota.init_table_size_table();
 init_table_size_table 
-----------------------
 
(1 row)

SELECT diskquota.set_schema_quota('badquota', '1 MB');
 set_schema_quota 
------------------
 
(1 row)

SELECT pg_sleep(10);
 pg_sleep 
----------
 
(1 row)

SELECT size, segid from diskquota.table_size where tableid in (select oid from pg_class where relname='t1');
  size   | segid 
---------+-------
 1310720 |     0
 1310720 |     2
 3932160 |    -1
 1310720 |     1
(4 rows)

-- expect fail
INSERT INTO badquota.t1 SELECT generate_series(0, 10);
ERROR:  schema's disk space quota exceeded with name:badquota
